name: 🚀 Déploiement sur AWS avec Debug

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🔍 Debug avant SSH
      run: |
        echo "💡 Debugging before SSH setup"
        echo "🏗️ OS Information:"
        uname -a
        echo "🔍 Liste des fichiers dans le répertoire courant :"
        ls -lah

    - name: 🔑 Configure SSH (avec Debug)
      run: |
        set -x  # Mode Debug - Affiche chaque commande avant exécution
        
        echo "🚀 Création du dossier SSH..."
        mkdir -p ~/.ssh || { echo "❌ Erreur : Impossible de créer ~/.ssh" ; exit 1; }
        
        echo "🔑 Ajout de la clé SSH..."
        echo "${{ secrets.AWS_SSH_KEY }}" > ~/.ssh/id_rsa || { echo "❌ Erreur : Impossible d'écrire la clé SSH" ; exit 1; }
        chmod 600 ~/.ssh/id_rsa || { echo "❌ Erreur : Impossible de modifier les permissions de la clé SSH" ; exit 1; }
        
        echo "🔍 Vérification de l'adresse AWS_HOST..."
        echo "Adresse AWS_HOST: ${{ secrets.AWS_HOST }}"

        echo "🔍 Test de connexion SSH..."
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_HOST }} "echo '✅ Connexion SSH réussie'" || { echo "❌ Erreur : Échec de connexion SSH" ; exit 1; }

        echo "✅ Configuration SSH terminée !"

    - name: 🔍 Debug après SSH
      run: |
        echo "📂 Contenu du dossier SSH :"
        ls -lah ~/.ssh
        echo "🔑 Vérification de la clé SSH :"
        cat ~/.ssh/id_rsa || echo "❌ Clé SSH introuvable"

    - name: 📂 Copier les fichiers sur AWS
      run: |
        echo "🚀 Début du transfert des fichiers..."
        rsync -avz --ignore-existing -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" . ubuntu@${{ secrets.AWS_HOST }}:/home/ubuntu/hotel_price_prediction
        echo "✅ Fichiers copiés avec succès !"
      continue-on-error: false  # Stoppe immédiatement en cas d'échec

    - name: 🚀 Déployer et redémarrer les services
      run: |
        ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.AWS_HOST }} << 'EOF'
        set -e  # Stoppe l'exécution si une commande échoue
    
        echo "🔄 Mise à jour des paquets..."
        sudo apt update -y
    
        echo "🐳 Vérification de Docker..."
        if ! command -v docker &> /dev/null; then
            echo "❌ Docker n'est pas installé. Installation en cours..."
            sudo apt install -y docker.io
            sudo systemctl enable docker
            sudo systemctl start docker
            echo "✅ Docker installé avec succès !"
        else
            echo "✅ Docker est déjà installé."
        fi

        echo "🔍 Vérification de Docker Compose..."
        if ! command -v docker-compose &> /dev/null; then
            echo "❌ Docker Compose n'est pas installé. Installation en cours..."
            sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
            echo "✅ Docker Compose installé avec succès !"
        else
            echo "✅ Docker Compose est déjà installé."
        fi

        echo "🔑 Ajout de l'utilisateur ubuntu au groupe docker..."
        sudo usermod -aG docker ubuntu

        echo "📂 Déploiement en cours..."
        cd /home/ubuntu/hotel_price_prediction
        sudo docker-compose down
        sudo docker-compose up --build -d
        EOF
      continue-on-error: false

    - name: 🧹 Nettoyage SSH
      run: rm -rf ~/.ssh
