from flask import Flask, request, jsonify
import joblib
import pandas as pd
import os

# Initialiser l'application Flask
app = Flask(__name__)

# Charger le mod√®le sauvegard√©
model_path = "model/random_forest_model.pkl"  # Mets le bon nom de ton fichier mod√®le
if os.path.exists(model_path):
    model = joblib.load(model_path)
    print("‚úÖ Mod√®le charg√© avec succ√®s !")
else:
    print("‚ùå Erreur : Mod√®le introuvable ! V√©rifie le chemin.")

# D√©finition de la route de test
@app.route("/", methods=["GET"])
def home():
    return jsonify({"message": "API de pr√©diction des prix d'h√¥tels est en ligne üöÄ"})

# Route pour faire des pr√©dictions
@app.route("/predict", methods=["POST"])
def predict():
    try:
        data = request.get_json()  # R√©cup√©rer les donn√©es JSON
        print("üì• Donn√©es re√ßues :", data)  # DEBUG : Afficher les donn√©es re√ßues dans le terminal
        
        df_input = pd.DataFrame([data])  # Convertir en DataFrame
        
        # Supprimer les colonnes inutiles si elles sont pr√©sentes
        columns_to_remove = ["hotel_id", "avatar_id", "price"]
        df_input = df_input.drop(columns=[col for col in columns_to_remove if col in df_input], errors='ignore')

        print("üìä Donn√©es transform√©es :", df_input)  # DEBUG : Afficher le DataFrame apr√®s transformation

        # Encodage de la colonne city_x
        cities = ["amsterdam", "copenhagen", "madrid", "paris", "rome", "sofia", "valletta", "vienna", "vilnius"]
        df_input["city_x"] = df_input["city_x"].apply(lambda x: cities.index(x) if x in cities else -1)

        print("üìä Donn√©es encod√©es pour la pr√©diction :", df_input)  # DEBUG

        # Faire la pr√©diction
        prediction = model.predict(df_input)
        
        # Retourner le r√©sultat
        return jsonify({"predicted_price": round(prediction[0], 2)})

    except Exception as e:
        print("‚ùå Erreur :", str(e))  # DEBUG : Afficher l'erreur d√©taill√©e
        return jsonify({"error": str(e)}), 400

# Lancer l'application
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000, debug=True)
